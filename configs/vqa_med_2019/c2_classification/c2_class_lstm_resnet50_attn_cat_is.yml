# Load config defining problems for training, validation and testing.
default_configs: vqa_med_2019/c2_classification/default_c2_classification.yml

training:
  problem:
    batch_size: 48
    # Appy all preprocessing/data augmentations.
    image_preprocessing: normalize
    # none | random_affine | random_horizontal_flip | normalize | all
    question_preprocessing: all
    # none | lowercase | remove_punctuation | tokenize | random_remove_stop_words | random_shuffle_words | all
    streams:
      # Problem is returning tokenized questions.
      questions: tokenized_questions

validation:
  problem:
    batch_size: 48
    question_preprocessing: lowercase,remove_punctuation,tokenize
    # none | lowercase | remove_punctuation | tokenize | random_remove_stop_words | random_shuffle_words | all
    streams:
      # Problem is returning tokenized questions.
      questions: tokenized_questions


pipeline:
  name: c2_class_lstm_resnet50_attn_cat_is

  global_publisher:
    priority: 0
    type: GlobalVariablePublisher
    # Add input_size to globals.
    keys: [question_encoder_output_size, latent_size, num_attention_heads, attention_activation_size, question_image_activation_size]
    values: [100, 100, 2, 4196, 300]

  ################# PIPE 0: question #################

  # Model 1: Embeddings
  question_embeddings:
    priority: 1.2
    type: SentenceEmbeddings
    embeddings_size: 100
    pretrained_embeddings_file: glove.6B.100d.txt
    data_folder: ~/data/vqa-med
    word_mappings_file: questions.all.word.mappings.csv
    streams:
      inputs: tokenized_questions
      outputs: embedded_questions

  # Model 2: RNN
  question_lstm:
    priority: 1.3
    type: RecurrentNeuralNetwork
    cell_type: LSTM
    prediction_mode: Last
    use_logsoftmax: False
    initial_state: Trainable
    dropout_rate: 0.1
    hidden_size: 50
    streams:
      inputs: embedded_questions
      predictions: question_activations
    globals:
      input_size: embeddings_size
      prediction_size: question_encoder_output_size

  ################# PIPE 2: image #################
  # Image encoder.
  image_encoder:
    priority: 3.1
    type: TorchVisionWrapper
    model_type: resnet50
    return_feature_maps: True
    streams:
      inputs: images
      outputs: feature_maps #image_activations
    # globals:
    #   output_size: image_encoder_output_size

  ################# PIPE 3: image-question fusion  #################
  # Attention + FF.
  question_image_fusion:
    priority: 4.1
    type: VQA_Attention
    dropout_rate: 0.5
    streams:
      image_encodings: feature_maps #image_activations
      question_encodings: question_activations
      outputs: attention_activations
    globals:
      question_encoding_size: question_encoder_output_size
      latent_size: latent_size
      multi_head_attention: num_attention_heads
      output_size: attention_activation_size

  # question_image_ffn:
  #   priority: 4.2
  #   type: FeedForwardNetwork
  #   hidden_sizes: [100]
  #   dropout_rate: 0.5
  #   streams:
  #     inputs: attention_activations
  #     predictions: question_image_activations
  #   globals:
  #     input_size: attention_activation_size
  #     prediction_size: question_image_activation_size

  classifier:
    priority: 5.1
    type: FeedForwardNetwork
    hidden_sizes: [100]
    dropout_rate: 0.5
    streams:
      inputs: attention_activations #question_image_activations #concatenated_activations
    globals:
      input_size: attention_activation_size #question_image_activation_size #concatentated_activations_size
      prediction_size: vocabulary_size_c2


  #: pipeline
